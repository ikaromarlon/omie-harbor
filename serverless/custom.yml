serverless-offline:
  httpPort: 3001
  noPrependStageInUrl: true
  apiKey: ${env:API_KEY, param:apiKey}
  disableScheduledEvents: true

serverless-iam-roles-per-function:
  defaultInherit: true

apiGatewayServiceProxies:
  - sqs:
      path: /webhook
      method: POST
      cors: true
      private: false
      queueName: ${self:resources.Resources.WebhookQueue.Properties.QueueName}
      request:
        template:
          application/json: |-
            #set ($body = $util.parseJson($input.body))
            Action=SendMessage##
            &MessageGroupId=$util.urlEncode("webhook-$body.appKey")##
            &MessageBody=$util.urlEncode($input.body)
      response:
          template:
            success: |-
              { "message": "accepted" }

service:
  name: ${self:service}-${sls:stage}
  warmup:
    description: Warm up function each five minutes
    rate: rate(5 minutes)
    enabled: ${self:custom.service.warmupEnabled.${sls:stage}}
    input: '{"warmup":true}'
  apiKey: ${env:API_KEY, param:apiKey}
  # by environment
  region:
    dev: us-east-1
    prd: sa-east-1
  domain:
    dev: dev.api.omie-harbor.app
    prd: api.omie-harbor.app
  warmupEnabled:
    dev: false
    prd: false
  ingestionDispatcherScheduleRate:
    dev: cron(0 8 ? * * *) # everyday at 08:00 UTC (05:00 BR)
    prd: cron(0 9 ? * * *) # everyday at 09:00 UTC (06:00 BR)
  dataExportMemorySize:
    dev: 4096
    prd: 4096 
    # prd: 3008 