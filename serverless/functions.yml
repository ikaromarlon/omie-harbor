registerCompany:
  handler: src/index.handler
  iamRoleStatementsName: ${self:custom.service.name}-registerCompany-role
  events:
    - schedule: ${self:custom.service.warmup}
    - http:
        path: /companies/register
        method: POST
        cors: true
        private: true
  package:
    patterns:
      - 'src/functions/registerCompany/**'

deleteDataByCompany:
  handler: src/index.handler
  iamRoleStatementsName: ${self:custom.service.name}-deleteDataByCompany-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ DataExportQueue, Arn ]
  events:
    - schedule: ${self:custom.service.warmup}
    - http:
        path: /companies/{id}/data
        method: DELETE
        cors: true
        private: true
  package:
    patterns:
      - 'src/functions/deleteDataByCompany/**'

ingestionDispatcher:
  handler: src/index.handler
  iamRoleStatementsName: ${self:custom.service.name}-ingestionDispatcher-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ IngestionQueue, Arn ]
  events:
    - schedule:
        name: ${self:custom.service.name}-ingestionDispatcher-rule1
        rate: ${self:custom.service.ingestionDispatcherScheduleRate.${sls:stage}}
        enabled: false
  package:
    patterns:
      - 'src/functions/ingestionDispatcher/**'

ingestionPerformer:
  handler: src/index.handler
  memorySize: 1024
  timeout: 900
  iamRoleStatementsName: ${self:custom.service.name}-ingestionPerformer-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ DataExportQueue, Arn ]
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ IngestionQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/ingestionPerformer/**'

dataExport:
  handler: src/index.handler
  memorySize: ${self:custom.service.dataExportMemorySize.${sls:stage}}
  timeout: 900
  iamRoleStatementsName: ${self:custom.service.name}-dataExport-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - Fn::Join: ['', [Fn::GetAtt: [ DataExportBucket, Arn ], '/*']]
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ DataExportQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/dataExport/**'

webhook:
  handler: src/index.handler
  timeout: ${self:provider.timeout}
  iamRoleStatementsName: ${self:custom.service.name}-webhook-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ DataExportQueue, Arn ]
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ WebhookQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/webhook/**'