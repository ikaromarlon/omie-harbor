ingestionDispatcher:
  handler: src/index.handler
  iamRoleStatementsName: ${self:custom.basename}-ingestionDispatcher-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ IngestionQueue, Arn ]
  events:
    - schedule:
        name: ${self:custom.basename}-ingestionDispatcher-eventRule-1
        rate: ${self:custom.ingestionDispatcherSchedule1.${self:provider.stage}.rate}
        enabled: ${self:custom.ingestionDispatcherSchedule1.${self:provider.stage}.enabled}
    - schedule:
        name: ${self:custom.basename}-ingestionDispatcher-eventRule-2
        rate: ${self:custom.ingestionDispatcherSchedule2.${self:provider.stage}.rate}
        enabled: ${self:custom.ingestionDispatcherSchedule2.${self:provider.stage}.enabled}
    - schedule:
        name: ${self:custom.basename}-ingestionDispatcher-eventRule-3
        rate: ${self:custom.ingestionDispatcherSchedule3.${self:provider.stage}.rate}
        enabled: ${self:custom.ingestionDispatcherSchedule3.${self:provider.stage}.enabled}
  package:
    patterns:
      - 'src/functions/ingestionDispatcher/**'

ingestionPerformer:
  handler: src/index.handler
  memorySize: 1024
  timeout: 900
  iamRoleStatementsName: ${self:custom.basename}-ingestionPerformer-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ DataExportQueue, Arn ]
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ IngestionQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/ingestionPerformer/**'

dataProcessing:
  handler: src/index.handler
  memorySize: ${self:provider.memorySize}
  timeout: 900
  iamRoleStatementsName: ${self:custom.basename}-dataProcessing-role
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ DataProcessingQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/dataProcessing/**'

dataExport:
  handler: src/index.handler
  memorySize: ${self:custom.dataExport.${self:provider.stage}.memorySize}
  timeout: 900
  iamRoleStatementsName: ${self:custom.basename}-dataExport-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - Fn::Join: ['', [Fn::GetAtt: [ DataExportBucket, Arn ], '/*']]
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ DataExportQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/dataExport/**'

deleteDataByCompany:
  handler: src/index.handler
  iamRoleStatementsName: ${self:custom.basename}-deleteDataByCompany-role
  events:
    - schedule: ${self:custom.functionsWarmUpScheduleEvent}
    - http:
        path: company/{id}/delete-data
        method: POST
        cors: ${self:custom.httpCors}
        private: ${self:custom.httpPrivate}
  package:
    patterns:
      - 'src/functions/deleteDataByCompany/**'