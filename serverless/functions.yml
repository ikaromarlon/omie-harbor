ingestionPerformer:
  handler: src/index.handler
  memorySize: 256
  timeout: 900
  iamRoleStatementsName: ${self:custom.basename}-ingestionPerformer-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ DataExportQueue, Arn ]
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource: '*'
  events:
    - schedule:
        name: ${self:custom.basename}-ingestionPerformer-eventRule-1
        rate: ${self:custom.ingestionPerformerSchedule1.${self:provider.stage}.rate}
        enabled: ${self:custom.ingestionPerformerSchedule1.${self:provider.stage}.enabled}
    - schedule:
        name: ${self:custom.basename}-ingestionPerformer-eventRule-2
        rate: ${self:custom.ingestionPerformerSchedule2.${self:provider.stage}.rate}
        enabled: ${self:custom.ingestionPerformerSchedule2.${self:provider.stage}.enabled}
    - schedule:
        name: ${self:custom.basename}-ingestionPerformer-eventRule-3
        rate: ${self:custom.ingestionPerformerSchedule3.${self:provider.stage}.rate}
        enabled: ${self:custom.ingestionPerformerSchedule3.${self:provider.stage}.enabled}
    - sqs:
        arn:
          Fn::GetAtt: [ IngestionQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/ingestionPerformer/**'

dataExport:
  handler: src/index.handler
  memorySize: ${self:custom.dataExport.${self:provider.stage}.memorySize}
  timeout: 900
  iamRoleStatementsName: ${self:custom.basename}-dataExport-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - Fn::Join: ['', [Fn::GetAtt: [ DataExportBucket, Arn ], '/*']]
  events:
    - sqs:
        arn:
          Fn::GetAtt: [ DataExportQueue, Arn ]
        batchSize: 1
  package:
    patterns:
      - 'src/functions/dataExport/**'