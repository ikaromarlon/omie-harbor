Resources:

  IngestionQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.service.name}-ingestion-queue.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      DeduplicationScope: queue
      MessageRetentionPeriod: 1209600 # 14 days in minutes (max)
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: ${self:functions.ingestionPerformer.timeout}

  OmieWebhookQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.service.name}-omieWebhook-queue.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      DeduplicationScope: queue
      MessageRetentionPeriod: 1209600 # 14 days in minutes (max)
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: ${self:functions.omieWebhook.timeout}
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt: [ omieWebhookDLQ, Arn ]
        maxReceiveCount: 1
  
  OmieWebhookDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.service.name}-omieWebhook-dlq.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      DeduplicationScope: queue
      MessageRetentionPeriod: 1209600 # 14 days in minutes (max)
      RedriveAllowPolicy:
        redrivePermission: allowAll
  
  DataExportQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.service.name}-dataExport-queue.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      DeduplicationScope: queue
      MessageRetentionPeriod: 345600 # 4 days in minutes (default)
      ReceiveMessageWaitTimeSeconds: 0
      VisibilityTimeout: ${self:functions.dataExport.timeout}

  DataExportBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.service.name}-data-export

Outputs:
  RestApiUrl:
    Value: { 'Fn::Join': [ '', [ 'https://', { 'Ref' : 'ApiGatewayRestApi' }, '.execute-api.${self:provider.region}.amazonaws.com/${sls:stage}' ] ] }
    Export:
      Name: ${self:custom.service.name}:RestApiUrl